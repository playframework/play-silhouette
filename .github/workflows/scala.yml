name: Scala CI

on:
  push:
    branches:
      - main
    tags:
      - v*.*.*
  pull_request:
    branches:
      - main

jobs:
  build:

    strategy:
      fail-fast: false
      matrix:
        jdk: [ 11, 17, 21 ]

    runs-on: ubuntu-latest
    env:
      JDK_VERSION: ${{ matrix.jdk }}

    steps:
      - id: apeezqkvp99yhsev
        name: Checkout Code
        uses: actions/checkout@v3
      - id: e6dq6rbrsdx9vfnw
        name: Set Up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: ${{ matrix.jdk }}
      #- id: czc3c36wxhuvscex
      #  name: Validating Code Formatting
      #  run: sbt clean scalariformFormat test:scalariformFormat
      - id: eyv27ug23k32wwde
        name: Checking Dependencies for Known Vulnerabilities
        run: sbt clean dependencyCheckAggregate
      - id: wwb3dhxdujnhq4kw
        name: Checking Dependencies for Updated Versions
        run: sbt clean dependencyUpdates

  test:

    needs:
      - build

    strategy:
      fail-fast: false
      matrix:
        jdk: [ 11, 17, 21 ]

    runs-on: ubuntu-latest
    env:
      JDK_VERSION:  ${{ matrix.jdk }}

    steps:
      - id: nc5h82tg2ctfff5r
        name: Checkout Code
        uses: actions/checkout@v3
      - id: actnu7yynjhkfrb2
        name: Set Up JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: ${{ matrix.jdk }}
      - id: yv6cqy6a86ep9fj2
        name: Testing and Generating Documentation
        run: sbt clean coverage +test doc coverageReport
      - id: gepa3detnavjje5a
        name: Aggregate Coverage from Sub-Projects and Upload to Coveralls
        run: sbt +coverageAggregate coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_FLAG_NAME: Scala ${{ matrix.scala }}

  deploy-snapshot-artifact:

    needs:
      - test

    strategy:
      fail-fast: false
      matrix:
        jdk: [ 11 ]

    runs-on: ubuntu-latest

    env:
      JDK_VERSION: ${{ matrix.jdk }}

    if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/heads') }}

    steps:
      - id: ks4ayzne88xenjnp
        name: Checkout Code
        uses: actions/checkout@v3
      - id: q4fu92f984mcxgv8
        name: Set Up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: ${{ matrix.jdk }}
      - id: wqktw5whah6d7x86
        name: Import GPG Key
        uses: crazy-max/ghaction-import-gpg@v4
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
      - id: ryhfp5fnf9zuszg6
        name: Add Sonatype Nexus Credentials
        run: |
          mkdir --parents ${HOME}/.sbt/1.0
          echo 'credentials += Credentials(realm = sys.env.getOrElse("NEXUS_REALM", ""), host = sys.env.getOrElse("NEXUS_HOST", ""), userName =  sys.env.getOrElse("NEXUS_USER", ""), passwd = sys.env.getOrElse("NEXUS_PASSWORD", ""))' > ${HOME}/.sbt/1.0/sonatype.sbt
          echo -e "realm=${NEXUS_REALM}\nhost=${NEXUS_HOST}\nuser=${NEXUS_USER}\npassword=${NEXUS_PASSWORD}\n" > ${HOME}/.sbt/.credential
        env:
          NEXUS_HOST: ${{ secrets.NEXUS_HOST }}
          NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
          NEXUS_REALM: ${{ secrets.NEXUS_REALM }}
          NEXUS_USER: ${{ secrets.NEXUS_USER }}
      - id: e96a98y39upwt364
        name: Release Play Silhouette Snapshot
        run: sbt +publishSigned
        env:
          NEXUS_HOST: ${{ secrets.NEXUS_HOST }}
          NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
          NEXUS_REALM: ${{ secrets.NEXUS_REALM }}
          NEXUS_USER: ${{ secrets.NEXUS_USER }}
          PGP_PASSPHRASE: ${{ secrets.PASSPHRASE }}
      - id: asdlg8932dsffj0s
        name: Message Discord Server
        uses: Ilshidur/action-discord@0.3.2
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: Commit ${{ github.sha }} SNAPSHOT Released to Maven.

  deploy-production-artifact:

    needs:
      - test

    strategy:
      fail-fast: false
      matrix:
        jdk: [ 11 ]

    runs-on: ubuntu-latest

    env:
      JDK_VERSION: ${{ matrix.jdk }}

    if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') }}

    steps:
      - id: zfkcyysr2ncsk66z
        name: Checkout Code
        uses: actions/checkout@v3
      - id: lrn8hqkvn5e25mzg
        name: Set Up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: ${{ matrix.jdk }}
      - id: qd74w49xtk3uvejh
        name: Import GPG Key
        uses: crazy-max/ghaction-import-gpg@v4
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
      - id: m8mhmxgvzr6w888c
        name: Add Sonatype Nexus Credentials
        run: |
          mkdir --parents ${HOME}/.sbt/1.0
          echo 'credentials += Credentials(realm = sys.env.getOrElse("NEXUS_REALM", ""), host = sys.env.getOrElse("NEXUS_HOST", ""), userName =  sys.env.getOrElse("NEXUS_USER", ""), passwd = sys.env.getOrElse("NEXUS_PASSWORD", ""))' > ${HOME}/.sbt/1.0/sonatype.sbt
          echo -e "realm=${NEXUS_REALM}\nhost=${NEXUS_HOST}\nuser=${NEXUS_USER}\npassword=${NEXUS_PASSWORD}\n" > ${HOME}/.sbt/.credential
        env:
          NEXUS_HOST: ${{ secrets.NEXUS_HOST }}
          NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
          NEXUS_REALM: ${{ secrets.NEXUS_REALM }}
          NEXUS_USER: ${{ secrets.NEXUS_USER }}
      - id: f32bq9vrkfk5earu
        name: Release Play Silhouette
        run: sbt +publishSigned +sonatypeBundleRelease
        env:
          NEXUS_HOST: ${{ secrets.NEXUS_HOST }}
          NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
          NEXUS_REALM: ${{ secrets.NEXUS_REALM }}
          NEXUS_USER: ${{ secrets.NEXUS_USER }}
          PGP_PASSPHRASE: ${{ secrets.PASSPHRASE }}
      - id: jh7dbids4opgiu3j
        name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: 'silhouette[^\/]*\/target\/scala-2\.13\/ivy-.*\.xml,silhouette[^\/]*\/target\/scala-2\.13\/play-silhouette.*'
          bodyFile: CHANGELOG.md
          token: ${{ secrets.GITHUB_TOKEN }}
      - id: bzxttjhregfdh3gs
        name: Message Discord Server
        uses: Ilshidur/action-discord@0.3.2
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: Production Version ${{ github.ref_name }} from Commit ${{ github.sha}} Released to Maven.
